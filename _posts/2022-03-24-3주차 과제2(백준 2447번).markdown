---
layout : post
title:  3주차 과제
date:   2022-03-24 13:28:38 +0900
categories: jekyll update

---

# 3주차 과제(백준 2447번)

![logo](https://media.vlpt.us/images/real_jun9u/post/9923eca0-9c93-4a59-b648-541bfb701574/image.png)    
![logo](https://media.vlpt.us/images/real_jun9u/post/872bbfc7-3566-454f-aaf0-65cb5f0961e8/image.png)

1. 0에서 3의 n제곱까지 모든 범위를 돌면서 값을 구현한다. i와 j는 행렬의 좌표라고 생각하자.  
2. 반복문을 돌면서 y랑 x가 3으로 나눠서 나머지가 1이 나올 경우에는 빈 공간으로 둔다. 그림을 그리면서 규칙을 찾으면서 보라색 칸을 보면 x의 나머지가 1이고, y의 나머지도 1일 경우에만 빈 공간이 된다는 걸 알 수 있다.        
(1,1) = 1 (1,4) = 1 (1,7) = 1 (3,3) = 1 (3,4) = 1 ... (7,7) = 1     
이 때 중요하게 봐야 할 것은 입력값이 3일때의 기본단위의 모양이 크기만 커졌지, 결국 가운데가 비어있다는 같은 규칙을 띈다는 것이다. 

**이 문제의 핵심은 입력받은 사이즈를 3으로 나눠가면서 점점 작은 단위로 검사하는 과정이다.**

---

이러한 재귀적 반복을 java 코드를 이용하여 구현하면 다음과 같다. 

```java
import java.util.Scanner;

public class Divideandconquer {

	static StringBuilder sb = new StringBuilder();
	

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				draw(i, j);
			}
			sb.append("\n");
		}
		System.out.println(sb.toString());
	}
	

	static void draw(int y, int x) {
		while (true) {
			if (y == 0)
				break;
			if (y % 3 == 1 && x % 3 == 1) {
				sb.append(" ");
				return;
			}
			y /= 3;
			x /= 3;
		}

	
		sb.append("*");
	}
}
```


